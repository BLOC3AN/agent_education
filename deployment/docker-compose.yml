
services:
  agent-education:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.agent
    container_name: agent-education-app
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    volumes:
      # Development volumes (comment out for production)
      - ../src:/app/src:ro
      - ../gui:/app/gui:ro
      - ../main.py:/app/main.py:ro
      - ../data/agent_data:/app/data/agent_data:rw
      # huggin face
      - ../deployment/cache/huggingface:/home/appuser/.cache/huggingface
      # Logs volume
      - agent-logs:/app/logs
    restart: unless-stopped
    networks:
      - agent-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 10G
          cpus: '2.5'
        reservations:
          memory: 256M
          cpus: '1.25'


  # Optional: Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: agent-education-redis
    ports:
      - "6379:6379"
    volumes:
      - ../data/redis:/data
    restart: unless-stopped
    networks:
      - agent-network
    command: redis-server --appendonly yes


  qdrant:
    image: qdrant/qdrant:latest 
    container_name: agent-education-qdrant
    restart: always
    ports:
      - "6333:6333" # For REST API
      - "6334:6334" # For gRPC
    expose:
      - 6333 # For REST API
      - 6334 # For gRPC
      - 6335 # For internal communication
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ../data/qdrant:/qdrant/storage
      # - qdrant-data:/qdrant/persistent
    networks:
      - agent-network
  
  # emmeded:
  #   build:
  #     context: ..
  #     dockerfile: deployment/Dockerfile.emmbed
  #   container_name: agent-education-emmbed
  #   ports:
  #     - "3010:3010"
  #   environment:
  #     - PYTHONPATH=/app
  #   env_file:
  #     - ../.env
  #   restart: none
  #   command:
  #     - python3
  #     - emmbed_data.py
  #   networks:
  #     - agent-network

  mcp-server:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.mcp
    container_name: agent-education-mcp-server
    ports:
      - "9099:9099"
    volumes:
      - ../data/agent_data:/app/data/agent_data:rw
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    restart: unless-stopped
    networks:
      - agent-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - agent-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - agent-network


  dozzle:
    container_name: dozzle-agent
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5555:5555"
    environment:
      - DOZZLE_LEVEL=info
      - DOZZLE_TAILSIZE=300
      - DOZZLE_AUTH=false
    command: ["--addr=:5555"] 
    restart: unless-stopped
    networks:
      - agent-network

volumes:
  agent-logs:
    driver: local

  redis-data:
    driver: local

  # qdrant-data:
  #   driver: local


networks:
  agent-network:
    driver: bridge

configs:
  qdrant_config:
    content: |
      log_level: INFO   