
services:
  agent-education:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.agent
    container_name: agent-education-app
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    volumes:
      # Development volumes (comment out for production)
      - ../src:/app/src:ro
      - ../gui:/app/gui:ro
      - ../main.py:/app/main.py:ro
      # Logs volume
      - agent-logs:/app/logs
    restart: unless-stopped
    networks:
      - agent-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 10G
          cpus: '2.5'
        reservations:
          memory: 512M
          cpus: '1.25'


  # Optional: Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: agent-education-redis
    ports:
      - "6379:6379"
    volumes:
      - ../data/redis:/data
    restart: unless-stopped
    networks:
      - agent-network
    command: redis-server --appendonly yes


  qdrant:
    image: qdrant/qdrant:latest 
    container_name: agent-education-qdrant
    restart: always
    ports:
      - "6333:6333" # For REST API
      - "6334:6334" # For gRPC
    expose:
      - 6333 # For REST API
      - 6334 # For gRPC
      - 6335 # For internal communication
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ../data/qdrant:/qdrant/storage
      # - qdrant-data:/qdrant/persistent
    networks:
      - agent-network
  
  emmeded:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.emmbed
    container_name: agent-education-emmbed
    ports:
      - "3010:3010"
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    restart: unless-stopped
    command:
      - python3
      - emmbed_data.py
    networks:
      - agent-network

volumes:
  agent-logs:
    driver: local

  redis-data:
    driver: local

  # qdrant-data:
  #   driver: local


networks:
  agent-network:
    driver: bridge

configs:
  qdrant_config:
    content: |
      log_level: INFO   